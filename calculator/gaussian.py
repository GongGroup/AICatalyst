import subprocess
from pathlib import Path


class Gaussian(object):
    pass


class GJFFile(object):
    def __init__(self, task="opt", method="b3lyp/6-31g(d,p)"):
        self.task = task
        self.method = method

    def read(self):
        pass

    def write(self, smiles: str, file='input.gjf'):
        process = subprocess.Popen(f"obabel -:{smiles} --gen3d -ogjf", stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        content = process.stdout.read().decode(encoding='utf-8')
        lines = content.splitlines()
        chk_path = Path(".").absolute() / Path(f"{file.removesuffix('.gjf')}.chk")
        lines[0] = f"%chk={chk_path}"
        lines[1] = f"#{self.task} {self.method}"
        lines[3] = "AutoGenerated"
        with open(file, "w") as f:
            f.write("\n".join(lines))


if __name__ == '__main__':
    gjf = GJFFile()
    gjf.write(smiles="C")
